
Name    : Chauhan Mehul Mahendrabhai
Roll no : 07
Course  : MCA 2
Subject : Java Programming
Assignment 3 : Exceptions
===================================================================================

4) Write a program which creates an array of Date in form (dd/mm/yy). Analyze each
element and check whether the date is correct or not. If the date is wrong then throw a
User defined Exception DateException and display the appropriate message. If the Date
is correct then display the date in this format. For example, if the date is 9/9/06 then
display the date like 9th September 2006. You are able to display all the dates in the
given String and for the date which is not proper, display the appropriate message.

===================================================================================
public class InvalidDate extends Exception{
	public InvalidDate(){
		super("Invalid Date");
	}
}

import java.util.Scanner;
import java.util.Date;
import java.text.SimpleDateFormat;
import prog4.exceptions.InvalidDate;

public class Main{
	public static boolean isValidDay(String day){
		return day.matches("^[0-9]|[0|1|2][0-9]{1}|3[0|1]$");		
	}
	public static boolean isValidMonth(String month){
		return month.matches("^[0-9]|0[1-9]|1[0-2]$");		
	}
	public static boolean isValidYear(String year){
		return year.matches("^[0-9]|[0-9]{2}$");		
	}
	public static boolean isValidDate(String dateStr){
		String[] dateArr = dateStr.split("/");
		return (dateArr.length == 3) && isValidDay(dateArr[0]) && isValidMonth(dateArr[1]) && isValidYear(dateArr[2]);
	}
	public static String[] getDatesFromUser(Scanner sc, int noOfDates){
		String[] datesArr = new String[noOfDates];
		for(int i=0; i<datesArr.length; i++){
			System.out.println("Enter date " + (i+1) + ":");
			datesArr[i] = sc.nextLine();
		}
		return datesArr;
	}
	
	public static void validateDates(String[] dates) throws InvalidDate{
		for(String currDate: dates){
			if(!isValidDate(currDate)){
				throw new InvalidDate();
			}
		}
	}
	
	public static Date convertToDate(String dateStr) {
		String[] dateArr = dateStr.split("/");
		return new Date(Integer.parseInt(dateArr[2]) + 100,Integer.parseInt(dateArr[1]) - 1,Integer.parseInt(dateArr[0]));
	}
	
	public static String getDayOfMonthSuffix(int day){
		switch(day%10){
			case 1:
				return "st";
			case 2:
				return "nd";
			case 3:
				return "rd";
			default:
				return "th";
		}
	}
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		// get dates from user
		System.out.println("Enter no of dates:");
		int noOfDates = sc.nextInt();
		sc.nextLine();
		String[] stringDates = getDatesFromUser(sc, noOfDates);
		
		try{
			// validate dates 
			validateDates(stringDates); 
			// convert datestrings to actual date after validating entered dates
			Date[] dates = new Date[stringDates.length];
			for(int i=0; i<stringDates.length; i++){
				dates[i] = convertToDate(stringDates[i]);
			}
			// format dates from dates
			SimpleDateFormat sdf = new SimpleDateFormat("d_ MMMM YYYY");
			System.out.println("Formated Dates:");
			for(Date currDate: dates){
				System.out.println(sdf.format(currDate).replace("_",getDayOfMonthSuffix(currDate.getDate())));
			}
						
		}catch(Exception e){
			System.out.println("Error: " + e.getMessage());
			e.printStackTrace();
		}
		
		sc.close();
	}
}

===================================================================================
Output
===================================================================================


Enter no of dates:
2
Enter date 1:
10/3/01  
Enter date 2:
34/112/234
Error: Invalid Date
prog4.exceptions.InvalidDate: Invalid Date       
        at prog4.Main.validateDates(Main.java:34)
        at prog4.Main.main(Main.java:66)

Enter no of dates:
2
Enter date 1:
10/03/01
Enter date 2:
19/11/00
Formated Dates:
10th March 2001
19th November 2000